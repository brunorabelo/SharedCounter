version: '3.8'

services:
  web:
    image: "${COMMIT_WEB_IMAGE_TAG}"
    command: gunicorn appcounter.wsgi:application --bind 0.0.0.0:8000
    expose:
      - 8000
      - 8001
    volumes:
      - static_volume:/home/app/web/staticfiles
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env.db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
  nginx:
    image: "${COMMIT_NGINX_IMAGE_TAG}"
    volumes:
      - static_volume:/home/app/web/staticfiles
      - ./nginx/production:/etc/nginx/conf.d
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
  redis:
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  postgres_data:
  static_volume:
  redis_data: