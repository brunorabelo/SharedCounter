version: '3.8'

services:
  web:
    build:
      context: ../../.
      dockerfile: Dockerfile.ci
      cache_from:
        - "${LATEST_WEB_IMAGE_TAG}"
    image: "${COMMIT_WEB_IMAGE_TAG}"
#    command: gunicorn appcounter.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/usr/src/app/staticfiles
    expose:
      - 8000
      - 8001
    env_file:
      - ../../.env
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:13.0-alpine
#    volumes: Just for the test stage, no persistence
#      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ../../.env.db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
  nginx:
    build:
      context: ../../.
      dockerfile: docker/nginx/Dockerfile
      cache_from:
        - "${LATEST_NGINX_IMAGE_TAG}"
    image: "${COMMIT_NGINX_IMAGE_TAG}"
    volumes:
      - static_volume:/usr/src/app/staticfiles
      - ../nginx/certbot/conf:/etc/letsencrypt
      - ../nginx/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web



volumes:
  static_volume:
